version: '3.8'

services:
  # Backend Service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: stock-it-backend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - PORT=3000
      - JWT_SECRET=your_jwt_secret_here
      - KAKAO_CLIENT_ID=your_kakao_client_id
      - KAKAO_CLIENT_SECRET=your_kakao_client_secret
      - GOOGLE_CLIENT_ID=your_google_client_id
      - GOOGLE_CLIENT_SECRET=your_google_client_secret
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      - database
    networks:
      - stock-it-network
    restart: unless-stopped

  # Frontend Service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: stock-it-frontend
    ports:
      - "5173:80"
    environment:
      - VITE_API_URL=http://localhost:3000
      - VITE_KAKAO_CLIENT_ID=your_kakao_client_id
      - VITE_GOOGLE_CLIENT_ID=your_google_client_id
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - stock-it-network
    restart: unless-stopped

  # Database Service (SQLite for development)
  database:
    image: alpine:latest
    container_name: stock-it-database
    volumes:
      - ./data:/data
    networks:
      - stock-it-network
    restart: unless-stopped

  # Redis Service (Optional - for caching)
  redis:
    image: redis:7-alpine
    container_name: stock-it-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - stock-it-network
    restart: unless-stopped

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: stock-it-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend
      - frontend
    networks:
      - stock-it-network
    restart: unless-stopped

  # PM2 Process Manager (Optional)
  pm2:
    image: node:18-alpine
    container_name: stock-it-pm2
    working_dir: /app
    command: >
      sh -c "npm install -g pm2 &&
             cd /app/backend &&
             npm install &&
             npm run build &&
             pm2 start dist/main.js --name 'stock-it-backend' &&
             pm2 logs"
    volumes:
      - ./backend:/app/backend
    depends_on:
      - database
    networks:
      - stock-it-network
    restart: unless-stopped

volumes:
  redis_data:
    driver: local

networks:
  stock-it-network:
    driver: bridge

# Development overrides
  backend:
    profiles:
      - dev
    environment:
      - NODE_ENV=development
      - LOG_LEVEL=debug
    command: npm run start:dev

  frontend:
    profiles:
      - dev
    command: npm run dev
    ports:
      - "5173:5173"
    environment:
      - VITE_API_URL=http://localhost:3000
